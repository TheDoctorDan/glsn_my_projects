/* rle_tables.h */
/*
|------------------------------------------------------------------------------|
|	Copyright (c) 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993     |
|	Gleeson and Associates                                                 |
|	All Rights Reserved                                                    |
|                                                                              |
|	THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF                         |
|	Gleeson And Associates                                                 |
|	The copyright notice above does not evidence any                       |
|	actual or intended publication of such source code.                    |
|------------------------------------------------------------------------------|
*/


#define NUM_LESS_THAN_64 64
static struct {
	int	amount;
	char	*bits;
	int	len;
} whites_less_than_64[NUM_LESS_THAN_64] = {
	{ 0,	"00110101", 8 },
	{ 1,	"000111", 6 },
	{ 2,	"0111", 4 },
	{ 3,	"1000", 4 },
	{ 4,	"1011", 4 },
	{ 5,	"1100", 4 },
	{ 6,	"1110", 4 },
	{ 7,	"1111", 4 },
	{ 8,	"10011", 5 },
	{ 9,	"10100", 5 },
	{ 10,	"00111", 5 },
	{ 11,	"01000", 5 },
	{ 12,	"001000", 6 },
	{ 13,	"000011", 6 },
	{ 14,	"110100", 6 },
	{ 15,	"110101", 6 },
	{ 16,	"101010", 6 },
	{ 17,	"101011", 6 },
	{ 18,	"0100111", 7 },
	{ 19,	"0001100", 7 },
	{ 20,	"0001000", 7 },
	{ 21,	"0010111", 7 },
	{ 22,	"0000011", 7 },
	{ 23,	"0000100", 7 },
	{ 24,	"0101000", 7 },
	{ 25,	"0101011", 7 },
	{ 26,	"0010011", 7 },
	{ 27,	"0100100", 7 },
	{ 28,	"0011000", 7 },
	{ 29,	"00000010", 8 },
	{ 30,	"00000011", 8 },
	{ 31,	"00011010", 8 },
	{ 32,	"00011011", 8 },
	{ 33,	"00010010", 8 },
	{ 34,	"00010011", 8 },
	{ 35,	"00010100", 8 },
	{ 36,	"00010101", 8 },
	{ 37,	"00010110", 8 },
	{ 38,	"00010111", 8 },
	{ 39,	"00101000", 8 },
	{ 40,	"00101001", 8 },
	{ 41,	"00101010", 8 },
	{ 42,	"00101011", 8 },
	{ 43,	"00101100", 8 },
	{ 44,	"00101101", 8 },
	{ 45,	"00000100", 8 },
	{ 46,	"00000101", 8 },
	{ 47,	"00001010", 8 },
	{ 48,	"00001011", 8 },
	{ 49,	"01010010", 8 },
	{ 50,	"01010011", 8 },
	{ 51,	"01010100", 8 },
	{ 52,	"01010101", 8 },
	{ 53,	"00100100", 8 },
	{ 54,	"00100101", 8 },
	{ 55,	"01011000", 8 },
	{ 56,	"01011001", 8 },
	{ 57,	"01011010", 8 },
	{ 58,	"01011011", 8 },
	{ 59,	"01001010", 8 },
	{ 60,	"01001011", 8 },
	{ 61,	"00110010", 8 },
	{ 62,	"00110011", 8 },
	{ 63,	"00110100", 8 }
};




static struct {
	int	amount;
	char	*bits;
	int	len;
} blacks_less_than_64[NUM_LESS_THAN_64] = {
	{  0,	"0000110111", 10 },
	{  1,	"010", 3 },
	{  2,	"11", 2 },
	{  3,	"10", 2 },
	{  4,	"011", 3 },
	{  5,	"0011", 4 },
	{  6,	"0010", 4 },
	{  7,	"00011", 5 },
	{  8,	"000101", 6 },
	{  9,	"000100", 6 },
	{ 10,	"0000100", 7 },
	{ 11,	"0000101", 7 },
	{ 12,	"0000111", 7 },
	{ 13,	"00000100", 8 },
	{ 14,	"00000111", 8 },
	{ 15,	"000011000", 9 },
	{ 16,	"0000010111", 10 },
	{ 17,	"0000011000", 10 },
	{ 18,	"0000001000", 10 },
	{ 19,	"00001100111", 11 },
	{ 20,	"00001101000", 11 },
	{ 21,	"00001101100", 11 },
	{ 22,	"00000110111", 11 },
	{ 23,	"00000101000", 11 },
	{ 24,	"00000010111", 11 },
	{ 25,	"00000011000", 11 },
	{ 26,	"000011001010", 12 },
	{ 27,	"000011001011", 12 },
	{ 28,	"000011001100", 12 },
	{ 29,	"000011001101", 12 },
	{ 30,	"000001101000", 12 },
	{ 31,	"000001101001", 12 },
	{ 32,	"000001101010", 12 },
	{ 33,	"000001101011", 12 },
	{ 34,	"000011010010", 12 },
	{ 35,	"000011010011", 12 },
	{ 36,	"000011010100", 12 },
	{ 37,	"000011010101", 12 },
	{ 38,	"000011010110", 12 },
	{ 39,	"000011010111", 12 },
	{ 40,	"000001101100", 12 },
	{ 41,	"000001101101", 12 },
	{ 42,	"000011011010", 12 },
	{ 43,	"000011011011", 12 },
	{ 44,	"000001010100", 12 },
	{ 45,	"000001010101", 12 },
	{ 46,	"000001010110", 12 },
	{ 47,	"000001010111", 12 },
	{ 48,	"000001100100", 12 },
	{ 49,	"000001100101", 12 },
	{ 50,	"000001010010", 12 },
	{ 51,	"000001010011", 12 },
	{ 52,	"000000100100", 12 },
	{ 53,	"000000110111", 12 },
	{ 54,	"000000111000", 12 },
	{ 55,	"000000100111", 12 },
	{ 56,	"000000101000", 12 },
	{ 57,	"000001011000", 12 },
	{ 58,	"000001011001", 12 },
	{ 59,	"000000101011", 12 },
	{ 60,	"000000101100", 12 },
	{ 61,	"000001011010", 12 },
	{ 62,	"000001100110", 12 },
	{ 63,	"000001100111", 12 }
};



#define NUM_MULT_OF_64 27
static struct {
	int	amount;
	char	*bits;
	int	len;
} whites_mult_of_64[NUM_MULT_OF_64] = {
	{ 64,	"11011", 5 },
	{ 128,	"10010", 5 },
	{ 192,	"010111", 6 },
	{ 256,	"0110111", 7 },
	{ 320,	"00110110", 8 },
	{ 384,	"00110111", 8 },
	{ 448,	"01100100", 8 },
	{ 512,	"01100101", 8 },
	{ 576,	"01101000", 8 },
	{ 640,	"01100111", 8 },
	{ 704,	"011001100", 9 },
	{ 768,	"011001101", 9 },
	{ 832,	"011010010", 9 },
	{ 896,	"011010011", 9 },
	{ 960,	"011010100", 9 },
	{ 1024,	"011010101", 9 },
	{ 1088,	"011010110", 9 },
	{ 1152,	"011010111", 9 },
	{ 1216,	"011011000", 9 },
	{ 1280,	"011011001", 9 },
	{ 1344,	"011011010", 9 },
	{ 1408,	"011011011", 9 },
	{ 1472,	"010011000", 9 },
	{ 1536,	"010011001", 9 },
	{ 1600,	"010011010", 9 },
	{ 1664,	"011000", 6 },
	{ 1728,	"010011011", 9 }
};



static struct {
	int	amount;
	char	*bits;
	int	len;
} blacks_mult_of_64[NUM_MULT_OF_64] = {
	{ 64,	"0000001111", 10 },
	{ 128,	"000011001000", 12 },
	{ 192,	"000011001001", 12 },
	{ 256,	"000001011011", 12 },
	{ 320,	"000000110011", 12 },
	{ 384,	"000000110100", 12 },
	{ 448,	"000000110101", 12 },
	{ 512,	"0000001101100", 13 },
	{ 576,	"0000001101101", 13 },
	{ 640,	"0000001001010", 13 },
	{ 704,	"0000001001011", 13 },
	{ 768,	"0000001001100", 13 },
	{ 832,	"0000001001101", 13 },
	{ 896,	"0000001110010", 13 },
	{ 960,	"0000001110011", 13 },
	{ 1024,	"0000001110100", 13 },
	{ 1088,	"0000001110101", 13 },
	{ 1152,	"0000001110110", 13 },
	{ 1216,	"0000001110111", 13 },
	{ 1280,	"0000001010010", 13 },
	{ 1344,	"0000001010011", 13 },
	{ 1408,	"0000001010100", 13 },
	{ 1472,	"0000001010101", 13 },
	{ 1536,	"0000001011010", 13 },
	{ 1600,	"0000001011011", 13 },
	{ 1664,	"0000001100100", 13 },
	{ 1728,	"0000001100101", 13 }
};




#define NUM_EXTRA_MULT_OF_64 13
/* index *64 +1792 = num bits */
/* (index +28) *64 = num bits */
/* (num bits /64)-28 = index */
static struct {
	int	amount;
	char	*bits;
	int	len;
} either_color_mult_of_64[NUM_EXTRA_MULT_OF_64] = {
	{ 1792,	"00000001000", 11 },
	{ 1856,	"00000001100", 11 },
	{ 1920,	"00000001101", 11 },
	{ 1984,	"000000010010", 12 },
	{ 2048,	"000000010011", 12 },
	{ 2112,	"000000010100", 12 },
	{ 2176,	"000000010101", 12 },
	{ 2240,	"000000010110", 12 },
	{ 2304,	"000000010111", 12 },
	{ 2368,	"000000011100", 12 },
	{ 2432,	"000000011101", 12 },
	{ 2496,	"000000011110", 12 },
	{ 2560,	"000000011111", 12 }
};



#define EOL_STRING "000000000001"
#define EOL_STRING_LEN 12


