/*
 * Subsystem_Node.java
 *
 * Created on June 28, 2006, 12:54 PM
 */

package com.amlibtech.login.data;

import com.amlibtech.data_fields.*;
import com.amlibtech.database.*;

/**
 *
 * @author  dgleeson
 */
public class Subsystem_Node {
    
    
    private DFString    subsystem_Id;
    private DFString    description;
    private DFString    package_Name;
    private DFString    servlet_Name;
    
    
    /**
     * Length of subsystem_Id.
     */    
    public static final int SUBSYSTEM_ID_LEN = 30;





    // Empty Constructor
    /** Creates a new instance of Subsystem
     * @exception throws Database_Record_Exception
     */
    public Subsystem_Node() throws Database_Record_Exception {
        try {
            this.subsystem_Id =  new DFString("subsystem_Id", "subsystem_Id", SUBSYSTEM_ID_LEN);
            this.description =  new DFString("description", "description", 30);
            this.package_Name =  new DFString("package_Name", "package_Name", 60);
            this.servlet_Name =  new DFString("servlet_Name", "servlet_Name", 60);
        }
        catch(DFException dfe){
            throw new Database_Record_Exception(this.getClass().getName() + ": constructor() : failed because DFException : " + dfe.getMessage());
        }
    }




    /** Creates a new instance of Subsystem
     * @exception throws Database_Record_Exception
     */
    public Subsystem_Node(String subsystem_Id, String description, String package_Name, String servlet_Name) throws Database_Record_Exception {
        this();
        try {
            this.subsystem_Id.setValue(subsystem_Id);
            this.description.setValue(description);
            this.package_Name.setValue(package_Name);
            this.servlet_Name.setValue(servlet_Name);
        }
        catch(DFException dfe){
            throw new Database_Record_Exception(this.getClass().getName() + ": constructor() : failed because DFException : " + dfe.getMessage());
        }
    }







    /**
     * Getter for property subsystem_Id.
     * @return Value of property subsystem_Id.
     */
    public DFString getSubsystem_Id() {
        return subsystem_Id;
    }


    /**
     * Setter for property subsystem_Id.
     * @param subsystem_Id New value of property subsystem_Id.
     */
    public void setSubsystem_Id(String subsystem_Id) throws DFException {
        this.subsystem_Id.setValue(subsystem_Id);
    }


    /**
     * Getter for property description.
     * @return Value of property description.
     */
    public DFString getDescription() {
        return description;
    }


    /**
     * Setter for property description.
     * @param description New value of property description.
     */
    public void setDescription(String description) throws DFException {
        this.description.setValue(description);
    }


    /**
     * Getter for property package_Name.
     * @return Value of property package_Name.
     */
    public DFString getPackage_Name() {
        return package_Name;
    }


    /**
     * Setter for property package_Name.
     * @param package_Name New value of property package_Name.
     */
    public void setPackage_Name(String package_Name) throws DFException {
        this.package_Name.setValue(package_Name);
    }


    /**
     * Getter for property servlet_Name.
     * @return Value of property servlet_Name.
     */
    public DFString getServlet_Name() {
        return servlet_Name;
    }


    /**
     * Setter for property servlet_Name.
     * @param servlet_Name New value of property servlet_Name.
     */
    public void setServlet_Name(String servlet_Name) throws DFException {
        this.servlet_Name.setValue(servlet_Name);
    }




}
